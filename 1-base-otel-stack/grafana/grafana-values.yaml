persistence:
  enabled: true
  size: 8Gi
service:
  type: ClusterIP
serviceMonitor:
  enabled: true
  namespace: grafana
datasources:
  prometheus.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        # /prometheus/ is required when configuring prometheus for sub-path behind reverse proxy
        url: http://prometheus-prometheus.prometheus.svc.cluster.local:9090/prometheus/
        isDefault: false
        jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 3.1.0
          cacheLevel: "Low"
          disableRecordingRules: false
        editable: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.loki.svc.cluster.local:3100
        isDefault: false
        jsonData:
          timeout: 60
          maxLines: 5000
        editable: true
      - name: Jaeger
        type: jaeger
        url: http://jaeger-query.jaeger.svc.cluster.local/jaeger/
        access: proxy
        isDefault: false
        jsonData:
          tracesToLogsV2:
            # Field with an internal link pointing to a logs data source in Grafana.
            # datasourceUid value must match the uid value of the logs data source.
            datasourceUid: "Loki"
            spanStartTimeShift: "1h"
            spanEndTimeShift: "-1h"
            tags: ["job", "instance", "pod", "namespace"]
            filterByTraceID: false
            filterBySpanID: false
            customQuery: true
            query: 'method="$${__span.tags.method}"'
          tracesToMetrics:
            datasourceUid: "Prometheus"
            spanStartTimeShift: "1h"
            spanEndTimeShift: "-1h"
            tags: [{ key: "service.name", value: "service" }, { key: "job" }]
            queries:
              - name: "Sample query"
                query: "sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))"
          nodeGraph:
            enabled: true
          traceQuery:
            timeShiftEnabled: true
            spanStartTimeShift: "1h"
            spanEndTimeShift: "-1h"
          spanBar:
            type: "None"
        editable: true

# Configure anonymous access to avoid need of logging in each time
grafana.ini:
  server:
    # Remove fs not using Grafana on a sub-path behind reverse proxy
    root_url: http://localhost/grafana
    serve_from_sub_path: true

  users:
    viewers_can_edit: true
  auth:
    disable_login_form: false
    disable_signout_menu: true
  auth.anonymous:
    enabled: true
    org_role: Admin
