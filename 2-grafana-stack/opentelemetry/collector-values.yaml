image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib
  tag: 0.123.0
mode: statefulset
service:
  enabled: true
extraManifests:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: opentelemetry-collector-custom
      namespace: open-telemetry
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: open-telemetry-collector-custom
    subjects:
      - kind: ServiceAccount
        name: opentelemetry-collector-custom
        namespace: open-telemetry
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
serviceAccount:
  create: false
  name: opentelemetry-collector-custom
extraEnvs:
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: OPENTELEMETRY_POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
# Highly experimental as of know
internalTelemetryViaOTLP:
  endpoint: ${env:OPENTELEMETRY_POD_IP}:4318
  traces:
    enabled: false
  metrics:
    enabled: true
  logs:
    enabled: false
serviceMonitor:
  enabled: false
  metricsEndpoints:
    - port: metrics
      interval: 10s
    - port: prometheus
      interval: 10s
      path: metrics
  #extraLabels:
  #  release: prometheus
ports:
  metrics:
    enabled: true
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false
config:
  receivers:
    jaeger: null
    zipkin: null
    otlp:
      protocols:
        grpc:
          endpoint: ${env:OPENTELEMETRY_POD_IP}:4317
        http:
          endpoint: ${env:OPENTELEMETRY_POD_IP}:4318
    #    prometheus/internal:
    #      config:
    #        scrape_configs:
    #          - job_name: jaeger-collector
    #            scrape_interval: 10s
    #            static_configs:
    #              - targets:
    #                  - jaeger-query.jaeger.svc.cluster.local:16687
    #                  - jaeger-collector.jaeger.svc.cluster.local:14269
    #
    #          - job_name: cert-manager-collector
    #            scrape_interval: 10s
    #            static_configs:
    #              - targets:
    #                  - cert-manager.cert-manager.svc.cluster.local:9402
    #                  - cert-manager-cainjector.cert-manager.svc.cluster.local:9402
    #                  - cert-manager-webhook.cert-manager.svc.cluster.local:9402
    #
    #          - job_name: ingress-nginx-collector
    #            scrape_interval: 10s
    #            static_configs:
    #              - targets:
    #                  - ingress-nginx-controller-metrics.ingress-nginx.svc.cluster.local:10254
    #
  processors:
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25
    batch: {}
    metricstransform:
      transforms:
        - include: .+
          match_type: regexp
          action: update
          operations:
            - action: add_label
              new_label: kubernetes.cluster.distribution
              new_value: kind
            - action: add_label
              new_label: kubernetes.cluster.author
              new_value: piotr.rzepa
  exporters:
    otlphttp/mimir:
      endpoint: http://mimir-nginx.mimir.svc.cluster.local/otlp
      tls:
        insecure: true
    prometheusremotewrite:
      endpoint: http://mimir-nginx.mimir.svc.cluster.local/api/v1/push
      tls:
        insecure: true
    otlphttp/loki:
      endpoint: http://loki.loki.svc.cluster.local:3100/otlp
      tls:
        insecure: true
    otlp/tempo:
      endpoint: http://tempo-distributor.tempo.svc.cluster.local:4317
      tls:
        insecure: true
    debug: {}
  extensions:
    health_check:
      endpoint: ${env:OPENTELEMETRY_POD_IP}:13133
  service:
    extensions: [health_check]
    pipelines:
      metrics/prometheus:
        receivers: [otlp]
        processors: [memory_limiter, metricstransform, batch]
        exporters: [prometheusremotewrite]
      metrics/otlp:
        receivers: [otlp]
        processors: [memory_limiter, metricstransform, batch]
        exporters: [otlphttp/mimir]
      logs:
        receivers: [otlp]
        processors: [memory_limiter, batch]
        exporters: [otlphttp/loki]
      traces:
        receivers: [otlp]
        processors: [memory_limiter, batch]
        exporters: [debug, otlp/tempo]
